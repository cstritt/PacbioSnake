
configfile: "config/config.yml"

import pandas as pd

samples = pd.read_table(config["samples"], header=None )


rule all:
    input:
        config["outdir"] + "/variants.vcf"

rule combine_assemblies:
    input: list(samples[1])
    output: 
        fasta = config["outdir"] + "/single_contig_assemblies.fasta",
        discarded = config["outdir"] + "/discarded_assemblies.txt"
    params:
        outdir = config["outdir"]
    conda: "../config/biopython.yaml"
    shell:
        """
        python workflow/scripts/combine_assemblies.py {params.outdir} {input} 

        """
    

rule pggb:
    input: config["outdir"] + "/single_contig_assemblies.fasta"
    output: config["outdir"] + "/graph.smooth.final.gfa"
    threads: config["threads"]
    params:
        nr_strains = len(samples),
        outdir = config["outdir"],
        outgraph = config["outdir"] + "/*smooth.final.gfa"
    singularity: "container/pggb_latest.sif"

    shell:
        """
        bgzip {input}
        samtools faidx {input}.gz

        pggb -i {input}.gz \
        -o {params.outdir} \
        -t {threads} \
        -n {params.nr_strains} \
        -p 99 \
        -s 5k

        cp {params.outgraph} {output}

    """

rule call_variants:
    input: config["outdir"] + "/graph.smooth.final.gfa"
    output: config["outdir"] + "/variants.vcf"
    threads: config["threads"]
    params:
        reference = config["reference"]
    singularity: "container/pggb_latest.sif"

    shell:
        """
        vg deconstruct {input} -d1 -e \
          -p {params.reference} \
          -t {threads} \
          > {output}

        """


